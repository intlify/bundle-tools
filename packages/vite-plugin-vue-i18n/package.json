{
  "name": "@intlify/vite-plugin-vue-i18n",
  "description": "Vite plugin for Vue I18n",
  "version": "3.3.1",
  "author": {
    "name": "kazuya kawaguchi",
    "email": "kawakazu80@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/intlify/bundle-tools/issues"
  },
  "peerDependencies": {
    "vite": "^2.0.0",
    "vue-i18n": "^9.1.0",
    "petite-vue-i18n": "^9.1.0"
  },
  "peerDependenciesMeta": {
    "vue-i18n": {
      "optional": true
    },
    "petite-vue-i18n": {
      "optional": true
    }
  },
  "dependencies": {
    "@intlify/bundle-utils": "^2.2.2",
    "@intlify/shared": "^9.1.0",
    "@rollup/pluginutils": "^4.1.0",
    "debug": "^4.3.1",
    "source-map": "0.6.1",
    "fast-glob": "^3.2.5"
  },
  "devDependencies": {},
  "engines": {
    "node": ">= 12"
  },
  "files": [
    "lib",
    "index.mjs",
    "client.d.ts"
  ],
  "homepage": "https://github.com/intlify/bundle-tools/blob/main/packages/vite-plugin-vue-i18n/README.md",
  "keywords": [
    "i18n",
    "plugin",
    "vite",
    "vitejs",
    "vue",
    "vue-i18n"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "module": "./index.mjs",
  "types": "lib/index.d.ts",
  "exports": {
    ".": {
      "import": "./index.mjs",
      "require": "./lib/index.js"
    },
    "./lib/*": "./lib/*",
    "./index.mjs": "./index.mjs",
    "./package.json": "./package.json"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/intlify/bundle-tools.git",
    "directory": "packages/vite-plugin-vue-i18n"
  },
  "scripts": {
    "build": "tsc -p .",
    "build:example": "vite build --config ./examples/vite.config.ts --outDir ./examples/dist",
    "clean": "npm-run-all clean:*",
    "clean:lib": "rm -rf ./lib",
    "clean:example": "rm -rf ./examples/dist",
    "dev": "vite examples --config ./examples/vite.config.ts",
    "dev:composition": "vite examples/composition --config ./examples/composition/vite.config.ts",
    "dev:global": "vite examples/global --config ./examples/global/vite.config.ts",
    "dev:legacy": "vite examples/legacy --config ./examples/legacy/vite.config.ts",
    "test": "yarn test:e2e",
    "test:e2e": "jest --runInBand --config ./jest.e2e.config.js",
    "watch": "tsc -p . --watch",
    "changelog": "esmo ../../scripts/changelog.ts",
    "release": "esmo ../../scripts/release.ts"
  }
}
