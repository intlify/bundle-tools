// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`AST code generation > code 1`] = `
"const resource = {
  \\"hi\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"hi there!\\"}],\\"static\\":\\"hi there!\\"}},
  \\"nested\\": {
    \\"hello\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"hello world!\\"}],\\"static\\":\\"hello world!\\"}},
    \\"more\\": {
      \\"plural\\": {\\"type\\":0,\\"body\\":{\\"type\\":1,\\"cases\\":[{\\"type\\":2,\\"items\\":[{\\"type\\":6,\\"modifier\\":{\\"type\\":8,\\"value\\":\\"caml\\"},\\"key\\":{\\"type\\":9,\\"value\\":\\"no apples\\"}}]},{\\"type\\":2,\\"items\\":[{\\"type\\":5,\\"index\\":0},{\\"type\\":3,\\"value\\":\\" apple\\"}]},{\\"type\\":2,\\"items\\":[{\\"type\\":4,\\"key\\":\\"n\\"},{\\"type\\":3,\\"value\\":\\" apples\\"}]}]}}
    },
    \\"list\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"hi, \\"},{\\"type\\":5,\\"index\\":0},{\\"type\\":3,\\"value\\":\\" !\\"}]}}
  },
  \\"„Åì„Çì„Å´„Å°„ÅØ\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"}],\\"static\\":\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"}},
  \\"single-quote\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"I don\\\\u0027t know!\\"}],\\"static\\":\\"I don\\\\u0027t know!\\"}},
  \\"emoji\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"üò∫\\"}],\\"static\\":\\"üò∫\\"}},
  \\"unicode\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"A\\"}],\\"static\\":\\"A\\"}},
  \\"unicode-escape\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"\\\\\\\\u0041\\"}],\\"static\\":\\"\\\\\\\\u0041\\"}},
  \\"backslash-single-quote\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"\\\\\\\\\\\\u0027\\"}],\\"static\\":\\"\\\\\\\\\\\\u0027\\"}},
  \\"backslash-backslash\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"\\\\\\\\\\\\\\\\\\"}],\\"static\\":\\"\\\\\\\\\\\\\\\\\\"}},
  \\"errors\\": [
    {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"ERROR1001\\"}],\\"static\\":\\"ERROR1001\\"}},
    {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"ERROR1002\\"}],\\"static\\":\\"ERROR1002\\"}},
    
  ],
  \\"complex\\": {
    \\"warnings\\": [
      {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"NOTE: This is warning\\"}],\\"static\\":\\"NOTE: This is warning\\"}},
      {
        \\"named-waring\\": {\\"type\\":0,\\"body\\":{\\"type\\":2,\\"items\\":[{\\"type\\":3,\\"value\\":\\"this is \\"},{\\"type\\":4,\\"key\\":\\"type\\"},{\\"type\\":3,\\"value\\":\\" warining\\"}]}}
      }
    ]
  }
}
export default resource"
`;

exports[`array basic > code 1`] = `
"export default function (Component) {
  const _Component = Component
  _Component.__i18n = _Component.__i18n || []
  _Component.__i18n.push({
    \\"locale\\": \\"\\",
    \\"resource\\": {
      \\"foo\\": [
        [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"bar\\"])};fn.source=\\"bar\\";return fn;})(),
          
        ],
        [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"baz\\"])};fn.source=\\"baz\\";return fn;})(),
          
        ]
      ]
    }
  })
}"
`;

exports[`array basic > map 1`] = `
{
  "mappings": ";wEACKA;wEACAC",
  "names": [
    "bar",
    "baz",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "foo:
  - - bar
  - - baz
",
  ],
  "version": 3,
}
`;

exports[`array mixed > code 1`] = `
"export default function (Component) {
  const _Component = Component
  _Component.__i18n = _Component.__i18n || []
  _Component.__i18n.push({
    \\"locale\\": \\"\\",
    \\"resource\\": {
      \\"foo\\": [
        {
          \\"foo\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"foo\\"])};fn.source=\\"foo\\";return fn;})()
        },
        [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"bar\\"])};fn.source=\\"bar\\";return fn;})(),
          [
            {
              \\"foo\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"foo\\"])};fn.source=\\"foo\\";return fn;})()
            },
            (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hoge\\"])};fn.source=\\"hoge\\";return fn;})(),
            
          ]
        ],
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"baz\\"])};fn.source=\\"baz\\";return fn;})(),
        [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"buz\\"])};fn.source=\\"buz\\";return fn;})(),
          
        ]
      ]
    }
  })
}"
`;

exports[`array mixed > map 1`] = `
{
  "mappings": ";2EACQA;wEACHC;+EACOD;0EACLE;sEACJC;wEACEC",
  "names": [
    "foo",
    "bar",
    "hoge",
    "baz",
    "buz",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "foo:
  - foo: 'foo'
  - - bar
    - - foo: 'foo'
      - hoge
  - baz
  - - buz
",
  ],
  "version": 3,
}
`;

exports[`bare > code 1`] = `
"{
  \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})()
}"
`;

exports[`bare > map 1`] = `
{
  "mappings": "yEAAMA",
  "names": [
    "hello world!",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hello: hello world!
",
  ],
  "version": 3,
}
`;

exports[`bridge > code 1`] = `
"module.exports = function (Component) {
  const _Component = Component.options || Component
  _Component.__i18n = _Component.__i18n || []
  _Component.__i18n.push({
    \\"locale\\": \\"\\",
    \\"resource\\": {
      \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hi there!\\"])};fn.source=\\"hi there!\\";return fn;})(),
      \\"nested\\": {
        \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})(),
        \\"more\\": {
          \\"plural\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, linked: _linked, type: _type, interpolate: _interpolate, list: _list, named: _named, plural: _plural } = ctx;return _plural([_normalize([_linked(\\"no apples\\", \\"caml\\", _type)]), _normalize([_interpolate(_list(0)), \\" apple\\"]), _normalize([_interpolate(_named(\\"n\\")), \\" apples\\"])])};fn.source=\\"@.caml:{'no apples'} | {0} apple | {n} apples\\";return fn;})()
        },
        \\"list\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, list: _list } = ctx;return _normalize([\\"hi, \\", _interpolate(_list(0)), \\" !\\"])};fn.source=\\"hi, {0} !\\";return fn;})()
      },
      \\"„Åì„Çì„Å´„Å°„ÅØ\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\";return fn;})(),
      \\"single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"I don't know!\\"])};fn.source=\\"I don't know!\\";return fn;})(),
      \\"emoji\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"üò∫\\"])};fn.source=\\"üò∫\\";return fn;})(),
      \\"unicode\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"A\\"])};fn.source=\\"A\\";return fn;})(),
      \\"unicode-escape\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\u0041\\"])};fn.source=\\"\\\\\\\\u0041\\";return fn;})(),
      \\"backslash-single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\'\\"])};fn.source=\\"\\\\\\\\'\\";return fn;})(),
      \\"backslash-backslash\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\\\\\\\\\\\"])};fn.source=\\"\\\\\\\\\\\\\\\\\\";return fn;})(),
      \\"errors\\": [
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1001\\"])};fn.source=\\"ERROR1001\\";return fn;})(),
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1002\\"])};fn.source=\\"ERROR1002\\";return fn;})(),
        
      ],
      \\"complex\\": {
        \\"warnings\\": [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"NOTE: This is warning\\"])};fn.source=\\"NOTE: This is warning\\";return fn;})(),
          {
            \\"named-waring\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\\"this is \\", _interpolate(_named(\\"type\\")), \\" warining\\"])};fn.source=\\"this is {type} warining\\";return fn;})()
          }
        ]
      }
    }
  })
  _Component.__i18nBridge = _Component.__i18nBridge || []
  _Component.__i18nBridge.push('{
  \\"hi\\": \\"hi there!\\",
  \\"nested\\": {
    \\"hello\\": \\"hello world!\\",
    \\"more\\": {
      \\"plural\\": \\"@.caml:{\\\\u0027no apples\\\\u0027} | {0} apple | {n} apples\\"
    },
    \\"list\\": \\"hi, {0} !\\"
  },
  \\"„Åì„Çì„Å´„Å°„ÅØ\\": \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\",
  \\"single-quote\\": \\"I don\\\\u0027t know!\\",
  \\"emoji\\": \\"üò∫\\",
  \\"unicode\\": \\"\\\\\\\\u0041\\",
  \\"unicode-escape\\": \\"\\\\\\\\\\\\\\\\u0041\\",
  \\"backslash-single-quote\\": \\"\\\\\\\\\\\\\\\\\\\\u0027\\",
  \\"backslash-backslash\\": \\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",
  \\"errors\\": [\\"ERROR1001\\", \\"ERROR1002\\"],
  \\"complex\\": {
    \\"warnings\\": [
      \\"NOTE: This is warning\\",
      {
        \\"named-waring\\": \\"this is {type} warining\\"
      }
    ]
  }
}
')
  delete _Component._Ctor
  
}"
`;

exports[`bridge > map 1`] = `
{
  "mappings": "sEAAGA;;6EAEOC;;qMAECC,aAAAC,8BAAAC,wBAAAC,wBAAAC,2BAAAC;kHACJC,QAAAJ,wBAAAK;yEACDC;gFACOC;yEACPC;2EACEC;kFACOC;0FACQC;uFACHC;;sEAEjBC;sEACAC;;;wEAGEC;gIACcC,YAAAC,8BAAAC",
  "names": [
    "hi there!",
    "hello world!",
    "no apples",
    "caml",
    "0",
    " apple",
    "n",
    " apples",
    "hi, ",
    " !",
    "„Åì„Çì„Å´„Å°„ÅØÔºÅ",
    "I don't know!",
    "üò∫",
    "A",
    "\\\\u0041",
    "\\\\'",
    "\\\\\\\\",
    "ERROR1001",
    "ERROR1002",
    "NOTE: This is warning",
    "this is ",
    "type",
    " warining",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"\\\\u0041\\"
unicode-escape: \\"\\\\\\\\u0041\\"
backslash-single-quote: \\\\'
backslash-backslash: \\\\\\\\
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "version": 3,
}
`;

exports[`bridge with ESM exporting > code 1`] = `
"export default function (Component) {
  const _Component = Component.options || Component
  _Component.__i18n = _Component.__i18n || []
  _Component.__i18n.push({
    \\"locale\\": \\"\\",
    \\"resource\\": {
      \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hi there!\\"])};fn.source=\\"hi there!\\";return fn;})(),
      \\"nested\\": {
        \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})(),
        \\"more\\": {
          \\"plural\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, linked: _linked, type: _type, interpolate: _interpolate, list: _list, named: _named, plural: _plural } = ctx;return _plural([_normalize([_linked(\\"no apples\\", \\"caml\\", _type)]), _normalize([_interpolate(_list(0)), \\" apple\\"]), _normalize([_interpolate(_named(\\"n\\")), \\" apples\\"])])};fn.source=\\"@.caml:{'no apples'} | {0} apple | {n} apples\\";return fn;})()
        },
        \\"list\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, list: _list } = ctx;return _normalize([\\"hi, \\", _interpolate(_list(0)), \\" !\\"])};fn.source=\\"hi, {0} !\\";return fn;})()
      },
      \\"„Åì„Çì„Å´„Å°„ÅØ\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\";return fn;})(),
      \\"single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"I don't know!\\"])};fn.source=\\"I don't know!\\";return fn;})(),
      \\"emoji\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"üò∫\\"])};fn.source=\\"üò∫\\";return fn;})(),
      \\"unicode\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"A\\"])};fn.source=\\"A\\";return fn;})(),
      \\"unicode-escape\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\u0041\\"])};fn.source=\\"\\\\\\\\u0041\\";return fn;})(),
      \\"backslash-single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\'\\"])};fn.source=\\"\\\\\\\\'\\";return fn;})(),
      \\"backslash-backslash\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\\\\\\\\\\\"])};fn.source=\\"\\\\\\\\\\\\\\\\\\";return fn;})(),
      \\"errors\\": [
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1001\\"])};fn.source=\\"ERROR1001\\";return fn;})(),
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1002\\"])};fn.source=\\"ERROR1002\\";return fn;})(),
        
      ],
      \\"complex\\": {
        \\"warnings\\": [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"NOTE: This is warning\\"])};fn.source=\\"NOTE: This is warning\\";return fn;})(),
          {
            \\"named-waring\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\\"this is \\", _interpolate(_named(\\"type\\")), \\" warining\\"])};fn.source=\\"this is {type} warining\\";return fn;})()
          }
        ]
      }
    }
  })
  _Component.__i18nBridge = _Component.__i18nBridge || []
  _Component.__i18nBridge.push('{
  \\"hi\\": \\"hi there!\\",
  \\"nested\\": {
    \\"hello\\": \\"hello world!\\",
    \\"more\\": {
      \\"plural\\": \\"@.caml:{\\\\u0027no apples\\\\u0027} | {0} apple | {n} apples\\"
    },
    \\"list\\": \\"hi, {0} !\\"
  },
  \\"„Åì„Çì„Å´„Å°„ÅØ\\": \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\",
  \\"single-quote\\": \\"I don\\\\u0027t know!\\",
  \\"emoji\\": \\"üò∫\\",
  \\"unicode\\": \\"\\\\\\\\u0041\\",
  \\"unicode-escape\\": \\"\\\\\\\\\\\\\\\\u0041\\",
  \\"backslash-single-quote\\": \\"\\\\\\\\\\\\\\\\\\\\u0027\\",
  \\"backslash-backslash\\": \\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",
  \\"errors\\": [\\"ERROR1001\\", \\"ERROR1002\\"],
  \\"complex\\": {
    \\"warnings\\": [
      \\"NOTE: This is warning\\",
      {
        \\"named-waring\\": \\"this is {type} warining\\"
      }
    ]
  }
}
')
  delete _Component._Ctor
  
}"
`;

exports[`bridge with ESM exporting > map 1`] = `
{
  "mappings": "sEAAGA;;6EAEOC;;qMAECC,aAAAC,8BAAAC,wBAAAC,wBAAAC,2BAAAC;kHACJC,QAAAJ,wBAAAK;yEACDC;gFACOC;yEACPC;2EACEC;kFACOC;0FACQC;uFACHC;;sEAEjBC;sEACAC;;;wEAGEC;gIACcC,YAAAC,8BAAAC",
  "names": [
    "hi there!",
    "hello world!",
    "no apples",
    "caml",
    "0",
    " apple",
    "n",
    " apples",
    "hi, ",
    " !",
    "„Åì„Çì„Å´„Å°„ÅØÔºÅ",
    "I don't know!",
    "üò∫",
    "A",
    "\\\\u0041",
    "\\\\'",
    "\\\\\\\\",
    "ERROR1001",
    "ERROR1002",
    "NOTE: This is warning",
    "this is ",
    "type",
    " warining",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"\\\\u0041\\"
unicode-escape: \\"\\\\\\\\u0041\\"
backslash-single-quote: \\\\'
backslash-backslash: \\\\\\\\
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "version": 3,
}
`;

exports[`html tag in message > code 1`] = `
"{
  \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"&lt;p&gt;hi there!&lt;/p&gt;\\"])};fn.source=\\"<p>hi there!</p>\\";return fn;})(),
  \\"alert\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"&lt;script&gt;window.alert(&apos;hi there!&apos;)&lt;/script&gt;\\"])};fn.source=\\"<script>window.alert('hi there!')</script>\\";return fn;})()
}"
`;

exports[`html tag in message > errors 1`] = `
[
  {
    "msg": "Detected HTML in '<p>hi there!</p>' message.",
    "path": "hi",
    "source": "<p>hi there!</p>",
  },
  {
    "msg": "Detected HTML in '<script>window.alert('hi there!')</script>' message.",
    "path": "alert",
    "source": "<script>window.alert('hi there!')</script>",
  },
]
`;

exports[`invalid message syntax > code 1`] = `
"{
  \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØ\\";return fn;})(),
  \\"this-is-invalid\\": \`@\`,
  \\"nested\\": {
    \\"array\\": [
      {
        \\"this-is-invalid\\": \`@\`
      }
    ]
  }
}"
`;

exports[`invalid message syntax > errors 1`] = `
[
  {
    "code": 14,
    "domain": "parser",
    "location": {
      "end": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
        "offset": 0,
      },
    },
    "msg": "Unexpected lexical analysis in token: 'EOF'",
    "path": "this-is-invalid",
    "source": "@",
  },
  {
    "code": 13,
    "domain": "parser",
    "location": {
      "end": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
      "start": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
    },
    "msg": "Unexpected empty linked key",
    "path": "this-is-invalid",
    "source": "@",
  },
  {
    "code": 14,
    "domain": "parser",
    "location": {
      "end": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
      "start": {
        "column": 1,
        "line": 1,
        "offset": 0,
      },
    },
    "msg": "Unexpected lexical analysis in token: 'EOF'",
    "path": "nested.array.0.this-is-invalid",
    "source": "@",
  },
  {
    "code": 13,
    "domain": "parser",
    "location": {
      "end": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
      "start": {
        "column": 2,
        "line": 1,
        "offset": 1,
      },
    },
    "msg": "Unexpected empty linked key",
    "path": "nested.array.0.this-is-invalid",
    "source": "@",
  },
]
`;

exports[`invalid message syntax > map 1`] = `
{
  "mappings": "yEAAMA;yHACUC;;;+HAGMA",
  "names": [
    "„Åì„Çì„Å´„Å°„ÅØ",
    "",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hello: „Åì„Çì„Å´„Å°„ÅØ
this-is-invalid: '@' # is this invalid?
nested:
  array:
    - this-is-invalid: '@'
",
  ],
  "version": 3,
}
`;

exports[`legacy > code 1`] = `
"export default function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push(\\"{\\\\\\"hi\\\\\\":\\\\\\"hi there!\\\\\\",\\\\\\"nested\\\\\\":{\\\\\\"hello\\\\\\":\\\\\\"hello world!\\\\\\",\\\\\\"more\\\\\\":{\\\\\\"plural\\\\\\":\\\\\\"@.caml:{\\\\\\\\u0027no apples\\\\\\\\u0027} | {0} apple | {n} apples\\\\\\"},\\\\\\"list\\\\\\":\\\\\\"hi, {0} !\\\\\\"},\\\\\\"„Åì„Çì„Å´„Å°„ÅØ\\\\\\":\\\\\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\\\\\",\\\\\\"single-quote\\\\\\":\\\\\\"I don\\\\\\\\u0027t know!\\\\\\",\\\\\\"emoji\\\\\\":\\\\\\"üò∫\\\\\\",\\\\\\"unicode\\\\\\":\\\\\\"A\\\\\\",\\\\\\"unicode-escape\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\u0041\\\\\\",\\\\\\"backslash-single-quote\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\u0027\\\\\\",\\\\\\"backslash-backslash\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\"errors\\\\\\":[\\\\\\"ERROR1001\\\\\\",\\\\\\"ERROR1002\\\\\\"],\\\\\\"complex\\\\\\":{\\\\\\"warnings\\\\\\":[\\\\\\"NOTE: This is warning\\\\\\",{\\\\\\"named-waring\\\\\\":\\\\\\"this is {type} warining\\\\\\"}]}}\\")
  delete Component.options._Ctor
}"
`;

exports[`legacy > map 1`] = `
SourceMap {
  "file": "vue-i18n-loader.yaml",
  "mappings": "AAAA;AACA;AACA;AACA;AACA",
  "names": [],
  "sources": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"/u0041\\"
unicode-escape: \\"//u0041\\"
backslash-single-quote: /'
backslash-backslash: //
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "sourcesContent": [
    "export default function (Component) {
  Component.options.__i18n = Component.options.__i18n || []
  Component.options.__i18n.push(\\"{\\\\\\"hi\\\\\\":\\\\\\"hi there!\\\\\\",\\\\\\"nested\\\\\\":{\\\\\\"hello\\\\\\":\\\\\\"hello world!\\\\\\",\\\\\\"more\\\\\\":{\\\\\\"plural\\\\\\":\\\\\\"@.caml:{\\\\\\\\u0027no apples\\\\\\\\u0027} | {0} apple | {n} apples\\\\\\"},\\\\\\"list\\\\\\":\\\\\\"hi, {0} !\\\\\\"},\\\\\\"„Åì„Çì„Å´„Å°„ÅØ\\\\\\":\\\\\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\\\\\",\\\\\\"single-quote\\\\\\":\\\\\\"I don\\\\\\\\u0027t know!\\\\\\",\\\\\\"emoji\\\\\\":\\\\\\"üò∫\\\\\\",\\\\\\"unicode\\\\\\":\\\\\\"A\\\\\\",\\\\\\"unicode-escape\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\u0041\\\\\\",\\\\\\"backslash-single-quote\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\u0027\\\\\\",\\\\\\"backslash-backslash\\\\\\":\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\"errors\\\\\\":[\\\\\\"ERROR1001\\\\\\",\\\\\\"ERROR1002\\\\\\"],\\\\\\"complex\\\\\\":{\\\\\\"warnings\\\\\\":[\\\\\\"NOTE: This is warning\\\\\\",{\\\\\\"named-waring\\\\\\":\\\\\\"this is {type} warining\\\\\\"}]}}\\")
  delete Component.options._Ctor
}",
  ],
  "version": 3,
}
`;

exports[`useClassComponent > code 1`] = `
"export default function (Component) {
  const _Component = Component.__o || Component.__vccOpts || Component
  _Component.__i18n = _Component.__i18n || []
  _Component.__i18n.push({
    \\"locale\\": \\"\\",
    \\"resource\\": {
      \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hi there!\\"])};fn.source=\\"hi there!\\";return fn;})(),
      \\"nested\\": {
        \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})(),
        \\"more\\": {
          \\"plural\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, linked: _linked, type: _type, interpolate: _interpolate, list: _list, named: _named, plural: _plural } = ctx;return _plural([_normalize([_linked(\\"no apples\\", \\"caml\\", _type)]), _normalize([_interpolate(_list(0)), \\" apple\\"]), _normalize([_interpolate(_named(\\"n\\")), \\" apples\\"])])};fn.source=\\"@.caml:{'no apples'} | {0} apple | {n} apples\\";return fn;})()
        },
        \\"list\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, list: _list } = ctx;return _normalize([\\"hi, \\", _interpolate(_list(0)), \\" !\\"])};fn.source=\\"hi, {0} !\\";return fn;})()
      },
      \\"„Åì„Çì„Å´„Å°„ÅØ\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\";return fn;})(),
      \\"single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"I don't know!\\"])};fn.source=\\"I don't know!\\";return fn;})(),
      \\"emoji\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"üò∫\\"])};fn.source=\\"üò∫\\";return fn;})(),
      \\"unicode\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"A\\"])};fn.source=\\"A\\";return fn;})(),
      \\"unicode-escape\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\u0041\\"])};fn.source=\\"\\\\\\\\u0041\\";return fn;})(),
      \\"backslash-single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\'\\"])};fn.source=\\"\\\\\\\\'\\";return fn;})(),
      \\"backslash-backslash\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\\\\\\\\\\\"])};fn.source=\\"\\\\\\\\\\\\\\\\\\";return fn;})(),
      \\"errors\\": [
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1001\\"])};fn.source=\\"ERROR1001\\";return fn;})(),
        (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1002\\"])};fn.source=\\"ERROR1002\\";return fn;})(),
        
      ],
      \\"complex\\": {
        \\"warnings\\": [
          (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"NOTE: This is warning\\"])};fn.source=\\"NOTE: This is warning\\";return fn;})(),
          {
            \\"named-waring\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\\"this is \\", _interpolate(_named(\\"type\\")), \\" warining\\"])};fn.source=\\"this is {type} warining\\";return fn;})()
          }
        ]
      }
    }
  })
}"
`;

exports[`useClassComponent > map 1`] = `
{
  "mappings": "sEAAGA;;6EAEOC;;qMAECC,aAAAC,8BAAAC,wBAAAC,wBAAAC,2BAAAC;kHACJC,QAAAJ,wBAAAK;yEACDC;gFACOC;yEACPC;2EACEC;kFACOC;0FACQC;uFACHC;;sEAEjBC;sEACAC;;;wEAGEC;gIACcC,YAAAC,8BAAAC",
  "names": [
    "hi there!",
    "hello world!",
    "no apples",
    "caml",
    "0",
    " apple",
    "n",
    " apples",
    "hi, ",
    " !",
    "„Åì„Çì„Å´„Å°„ÅØÔºÅ",
    "I don't know!",
    "üò∫",
    "A",
    "\\\\u0041",
    "\\\\'",
    "\\\\\\\\",
    "ERROR1001",
    "ERROR1002",
    "NOTE: This is warning",
    "this is ",
    "type",
    " warining",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"\\\\u0041\\"
unicode-escape: \\"\\\\\\\\u0041\\"
backslash-single-quote: \\\\'
backslash-backslash: \\\\\\\\
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "version": 3,
}
`;

exports[`yaml > code 1`] = `
"const resource = {
  \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hi there!\\"])};fn.source=\\"hi there!\\";return fn;})(),
  \\"nested\\": {
    \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})(),
    \\"more\\": {
      \\"plural\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, linked: _linked, type: _type, interpolate: _interpolate, list: _list, named: _named, plural: _plural } = ctx;return _plural([_normalize([_linked(\\"no apples\\", \\"caml\\", _type)]), _normalize([_interpolate(_list(0)), \\" apple\\"]), _normalize([_interpolate(_named(\\"n\\")), \\" apples\\"])])};fn.source=\\"@.caml:{'no apples'} | {0} apple | {n} apples\\";return fn;})()
    },
    \\"list\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, list: _list } = ctx;return _normalize([\\"hi, \\", _interpolate(_list(0)), \\" !\\"])};fn.source=\\"hi, {0} !\\";return fn;})()
  },
  \\"„Åì„Çì„Å´„Å°„ÅØ\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\";return fn;})(),
  \\"single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"I don't know!\\"])};fn.source=\\"I don't know!\\";return fn;})(),
  \\"emoji\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"üò∫\\"])};fn.source=\\"üò∫\\";return fn;})(),
  \\"unicode\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"A\\"])};fn.source=\\"A\\";return fn;})(),
  \\"unicode-escape\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\u0041\\"])};fn.source=\\"\\\\\\\\u0041\\";return fn;})(),
  \\"backslash-single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\'\\"])};fn.source=\\"\\\\\\\\'\\";return fn;})(),
  \\"backslash-backslash\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\\\\\\\\\\\"])};fn.source=\\"\\\\\\\\\\\\\\\\\\";return fn;})(),
  \\"errors\\": [
    (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1001\\"])};fn.source=\\"ERROR1001\\";return fn;})(),
    (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1002\\"])};fn.source=\\"ERROR1002\\";return fn;})(),
    
  ],
  \\"complex\\": {
    \\"warnings\\": [
      (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"NOTE: This is warning\\"])};fn.source=\\"NOTE: This is warning\\";return fn;})(),
      {
        \\"named-waring\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\\"this is \\", _interpolate(_named(\\"type\\")), \\" warining\\"])};fn.source=\\"this is {type} warining\\";return fn;})()
      }
    ]
  }
}
export default resource"
`;

exports[`yaml > map 1`] = `
{
  "mappings": "sEAAGA;;6EAEOC;;qMAECC,aAAAC,8BAAAC,wBAAAC,wBAAAC,2BAAAC;kHACJC,QAAAJ,wBAAAK;yEACDC;gFACOC;yEACPC;2EACEC;kFACOC;0FACQC;uFACHC;;sEAEjBC;sEACAC;;;wEAGEC;gIACcC,YAAAC,8BAAAC",
  "names": [
    "hi there!",
    "hello world!",
    "no apples",
    "caml",
    "0",
    " apple",
    "n",
    " apples",
    "hi, ",
    " !",
    "„Åì„Çì„Å´„Å°„ÅØÔºÅ",
    "I don't know!",
    "üò∫",
    "A",
    "\\\\u0041",
    "\\\\'",
    "\\\\\\\\",
    "ERROR1001",
    "ERROR1002",
    "NOTE: This is warning",
    "this is ",
    "type",
    " warining",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"\\\\u0041\\"
unicode-escape: \\"\\\\\\\\u0041\\"
backslash-single-quote: \\\\'
backslash-backslash: \\\\\\\\
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "version": 3,
}
`;

exports[`yml > code 1`] = `
"const resource = {
  \\"hi\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hi there!\\"])};fn.source=\\"hi there!\\";return fn;})(),
  \\"nested\\": {
    \\"hello\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"hello world!\\"])};fn.source=\\"hello world!\\";return fn;})(),
    \\"more\\": {
      \\"plural\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, linked: _linked, type: _type, interpolate: _interpolate, list: _list, named: _named, plural: _plural } = ctx;return _plural([_normalize([_linked(\\"no apples\\", \\"caml\\", _type)]), _normalize([_interpolate(_list(0)), \\" apple\\"]), _normalize([_interpolate(_named(\\"n\\")), \\" apples\\"])])};fn.source=\\"@.caml:{'no apples'} | {0} apple | {n} apples\\";return fn;})()
    },
    \\"list\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, list: _list } = ctx;return _normalize([\\"hi, \\", _interpolate(_list(0)), \\" !\\"])};fn.source=\\"hi, {0} !\\";return fn;})()
  },
  \\"„Åì„Çì„Å´„Å°„ÅØ\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"])};fn.source=\\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\";return fn;})(),
  \\"single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"I don't know!\\"])};fn.source=\\"I don't know!\\";return fn;})(),
  \\"emoji\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"üò∫\\"])};fn.source=\\"üò∫\\";return fn;})(),
  \\"unicode\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"A\\"])};fn.source=\\"A\\";return fn;})(),
  \\"unicode-escape\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\u0041\\"])};fn.source=\\"\\\\\\\\u0041\\";return fn;})(),
  \\"backslash-single-quote\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\'\\"])};fn.source=\\"\\\\\\\\'\\";return fn;})(),
  \\"backslash-backslash\\": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"\\\\\\\\\\\\\\\\\\"])};fn.source=\\"\\\\\\\\\\\\\\\\\\";return fn;})(),
  \\"errors\\": [
    (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1001\\"])};fn.source=\\"ERROR1001\\";return fn;})(),
    (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"ERROR1002\\"])};fn.source=\\"ERROR1002\\";return fn;})(),
    
  ],
  \\"complex\\": {
    \\"warnings\\": [
      (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize([\\"NOTE: This is warning\\"])};fn.source=\\"NOTE: This is warning\\";return fn;})(),
      {
        \\"named-waring\\": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize([\\"this is \\", _interpolate(_named(\\"type\\")), \\" warining\\"])};fn.source=\\"this is {type} warining\\";return fn;})()
      }
    ]
  }
}
export default resource"
`;

exports[`yml > map 1`] = `
{
  "mappings": "sEAAGA;;6EAEOC;;qMAECC,aAAAC,8BAAAC,wBAAAC,wBAAAC,2BAAAC;kHACJC,QAAAJ,wBAAAK;yEACDC;gFACOC;yEACPC;2EACEC;kFACOC;0FACQC;uFACHC;;sEAEjBC;sEACAC;;;wEAGEC;gIACcC,YAAAC,8BAAAC",
  "names": [
    "hi there!",
    "hello world!",
    "no apples",
    "caml",
    "0",
    " apple",
    "n",
    " apples",
    "hi, ",
    " !",
    "„Åì„Çì„Å´„Å°„ÅØÔºÅ",
    "I don't know!",
    "üò∫",
    "A",
    "\\\\u0041",
    "\\\\'",
    "\\\\\\\\",
    "ERROR1001",
    "ERROR1002",
    "NOTE: This is warning",
    "this is ",
    "type",
    " warining",
  ],
  "sources": [
    "vue-i18n-loader.yaml",
  ],
  "sourcesContent": [
    "hi: hi there!
nested:
  \\"hello\\": \\"hello world!\\"
  more:
    plural: \\"@.caml:{'no apples'} | {0} apple | {n} apples\\"
  list: hi, {0} !
„Åì„Çì„Å´„Å°„ÅØ: \\"„Åì„Çì„Å´„Å°„ÅØÔºÅ\\"
single-quote: \\"I don't know!\\"
emoji: üò∫
unicode: \\"\\\\u0041\\"
unicode-escape: \\"\\\\\\\\u0041\\"
backslash-single-quote: \\\\'
backslash-backslash: \\\\\\\\
errors:
  - ERROR1001
  - ERROR1002
complex:
  warnings:
    - 'NOTE: This is warning'
    - named-waring: \\"this is {type} warining\\"
",
  ],
  "version": 3,
}
`;
