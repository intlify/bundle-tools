name: Lint & Test
on:
  push:
    branches-ignore:
      - gh-pages
  pull_request:
    branches-ignore:
      - gh-pages
    types:
      - opened
      - synchronize
      - reopened
permissions:
  contents: read
env:
  CI: true

jobs:
  build:
    name: 'Build for tests on Node.js ${{ matrix.node }} OS: ${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build code
        run: pnpm build

      - name: Cache dist
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: build-intlify-bundle-tools-os-${{ matrix.os }}-${{ github.sha }}

  lint:
    name: 'Lint on Node.js ${{ matrix.node }} OS: ${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    needs:
      - build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Restore dist cache
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: build-intlify-bundle-tools-os-${{ matrix.os }}-${{ github.sha }}

      - name: Linting
        run: pnpm lint

  test:
    name: 'Test on Node.js ${{ matrix.node }} OS: ${{matrix.os}} (${{ matrix.framework }})'
    runs-on: ${{ matrix.os }}
    needs:
      - build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20, 22]
        framework: ['vite', 'rspack', 'webpack']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # https://github.com/vitejs/vite/blob/main/.github/workflows/ci.yml#L62
      # Install playwright's binary under custom directory to cache
      - name: Set Playwright path
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/playwright-bin" >> $GITHUB_ENV

      - name: Cache Playwright's binary
        uses: actions/cache@v4
        with:
          # Playwright removes unused browsers automatically
          # So does not need to add playwright version to key
          key: ${{ runner.os }}-playwright-bin-v1
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

      - name: Install Playwright
        # does not need to explicitly set chromium after https://github.com/microsoft/playwright/issues/14862 is solved
        run: pnpm playwright install chromium

      - name: Restore dist cache
        uses: actions/cache@v4
        with:
          path: packages/*/lib
          key: build-intlify-bundle-tools-os-${{ matrix.os }}-${{ github.sha }}

      - name: Testing
        run: pnpm test
        env:
          TEST_FRAMEWORK: ${{ matrix.framework }}
